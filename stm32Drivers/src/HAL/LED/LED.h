#ifndef HAL_LED_LED_H_
#define HAL_LED_LED_H_


/********************************************************************************************************/
/************************************************Includes************************************************/
/********************************************************************************************************/
#include"LIB\Error_Status.h"
#include"LIB\Std_Types.h"
#include"LIB\Bit_Mask.h"

/********************************************************************************************************/
/************************************************Defines*************************************************/
/********************************************************************************************************/




/********************************************************************************************************/
/************************************************Types***************************************************/
/********************************************************************************************************/


typedef enum { 
 LED_High_Active = 1,	 
 LED_LOW_Active = 0, 
}LED_Activity_t;

typedef enum { 
 LED_strOutput_OFF,
 LED_strOutput_ON	
}LED_State_t;



typedef struct{
    u32 port;
    u8 pin;
    LED_State_t LED_strStatus; 
	LED_Activity_t LED_strActive;	
}LED_strState_t;




/********************************************************************************************************/
/************************************************APIs****************************************************/
/********************************************************************************************************/

E_ErrorStatus_t LED_init(void);
E_ErrorStatus_t LED_TogLedState(u8 Led_NUM);
E_ErrorStatus_t LED_setLedState(u8 Led_NUM, LED_State_t LedState);
E_ErrorStatus_t LED_getLedState(u8 Led_NUM , LED_Activity_t *LED_Activity);


#endif // HAL_LED_LED_H_